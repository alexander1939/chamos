{% extends "base.jinja" %}

{% block title %}Gestión de Usuarios{% endblock %}

{% block content %}
<div class="search-container d-flex">
    <input type="text" id="search-input" placeholder="Buscar por nombre o descripción..." class="form-control"
        onkeyup="filterContent()">
    <button type="button" id="cancel-search" class="btn btn-secondary ms-2" style="display:none;"
        onclick="cancelSearch()">Cancelar</button>
</div>

<div class="container mt-4">
    <h1 class="text-center mb-4">Gestión de Usuarios</h1>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-primary">
                <tr>
                    <th>Nombre</th>
                    <th>Materias</th>
                    <th>Proyectos</th>
                    <th>Juegos</th>
                </tr>
            </thead>
            <tbody id="user-table-body">
                <!-- Aquí se insertarán los datos dinámicamente -->
            </tbody>
        </table>
    </div>
</div>

<!-- Agregar el script de SweetAlert2 aquí -->
<link rel="stylesheet" href="{{ url_for('static', filename='css/libs/sweetalert2.min.css') }}">
<script src="{{ url_for('static', filename='js/libs/sweetalert2.min.js') }}"></script>

<!-- Script de gestión de usuarios -->
<script src="{{ url_for('static', filename='js/apis/gestionar_usuarios_api.js') }}"></script>
<script src="{{ url_for('static', filename='js/components/filtro_catalago.js') }}"></script>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const tableBody = document.getElementById("user-table-body");

        try {
            const response = await fetch("/buscar/privilegios?query=", {
                method: "GET",
                credentials: "include",
                headers: { "Content-Type": "application/json" },
            });

            if (!response.ok) {
                console.error(`Error en la API (Código ${response.status}): ${response.statusText}`);
                return;
            }

            const usersData = await response.json();
            if (!Array.isArray(usersData)) {
                console.error("La API no devolvió una lista de usuarios:", usersData);
                return;
            }

            tableBody.innerHTML = "";

            usersData.forEach(user => {
                let row = `<tr data-user-id="${user.id}">
                <td>${user.name} ${user.surnames}</td>
                ${generatePrivilegesCells(user)}
            </tr>`;
                tableBody.innerHTML += row;
            });

        } catch (error) {
            console.error("Error al conectar con la API:", error);
        }
    });

    function generatePrivilegesCells(user) {
        const privilegeNames = ["Materias", "Proyectos", "Juegos"];
        let cells = "";

        privilegeNames.forEach(privName => {
            let privilege = user.privileges.find(p => p.name === privName);
            let hasPrivilege = privilege !== undefined;

            cells += `
            <td>
                <label>
                    <input type="checkbox" class="privilege-toggle" data-privilege="${privName}" ${hasPrivilege ? "checked" : ""}> ${privName}
                </label>
                <div class="privilege-options" style="display: ${hasPrivilege ? "block" : "none"};">
                    <label><input type="checkbox" class="can-create" ${privilege?.can_create ? "checked" : ""}> Crear</label>
                    <label><input type="checkbox" class="can-edit" ${privilege?.can_edit ? "checked" : ""}> Editar</label>
                    <label><input type="checkbox" class="can-delete" ${privilege?.can_delete ? "checked" : ""}> Eliminar</label>
                    <label><input type="checkbox" class="can-view" ${privilege?.can_view ? "checked" : ""}> Consultar</label>
                </div>
            </td>
        `;
        });

        return cells;
    }
</script>

{% endblock %}